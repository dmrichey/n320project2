{"version":3,"sources":["Components/Tree.js","Components/Family.js","Components/Person.js","Components/Ancestors.js","Components/Descendants.js","App.js","reportWebVitals.js","index.js"],"names":["Tree","props","familyNodeEls","data","families","map","node","ind","className","r","cx","nodeXCoord","cy","nodeYCoord","onClick","selectFamily","nodeindex","personNodeEls","persons","selectPerson","lineEls","lines","line","x1","x1Coord","y1","y1Coord","x2","x2Coord","y2","y2Coord","stroke","strokeWidth","height","width","Family","Person","Ancestors","linesToStyle","nodesToVisit","push","index","currentNode","id","parents","marriage","isFamily","shift","parentNum1","spouse1","parentNum2","spouse2","spouse1Line","spouse2Line","parentNum","parentLine","console","log","highlightedLineEls","resetStyles","Descendants","children","forEach","element","childrenLines","marriageNum","marriageLine","App","useState","treeData","setTreeData","familyIndex","setFamilyIndex","personIndex","setPersonIndex","currentDisplay","setCurrentDisplay","loading","setLoading","useEffect","fetch","then","response","json","displayAncestors","displayDescendants","returnToTree","nodeId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f30e64e.chunk.js","sourcesContent":["export default function Tree(props) {\r\n  let familyNodeEls = props.data.families.map((node, ind) => {\r\n    return (\r\n      <circle\r\n        className=\"familyNode\"\r\n        r={25}\r\n        cx={node.nodeXCoord}\r\n        cy={node.nodeYCoord}\r\n        onClick={props.selectFamily}\r\n        nodeindex={ind}\r\n      />\r\n    );\r\n  });\r\n  let personNodeEls = props.data.persons.map((node, ind) => {\r\n    return (\r\n      <circle\r\n        className=\"personNode\"\r\n        r={25}\r\n        cx={node.nodeXCoord}\r\n        cy={node.nodeYCoord}\r\n        onClick={props.selectPerson}\r\n        //onMouseOver={SetPreview(ind)}\r\n        nodeindex={ind}\r\n      />\r\n    );\r\n  });\r\n  let lineEls = props.data.lines.map((line, ind) => {\r\n    return (\r\n      <line\r\n        x1={line.x1Coord}\r\n        y1={line.y1Coord}\r\n        x2={line.x2Coord}\r\n        y2={line.y2Coord}\r\n        stroke=\"black\"\r\n        strokeWidth={5}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"viewport\">\r\n        <svg height=\"100%\" width=\"100%\">\r\n          {lineEls}\r\n          {familyNodeEls}\r\n          {personNodeEls}\r\n        </svg>\r\n      </div>\r\n      <div className=\"sidePanel\"></div>\r\n    </div>\r\n  );\r\n\r\n  //function SetPreview(ind) {\r\n  //console.log(ind);\r\n  //setNamePreview(props.data.persons[ind].name);\r\n  //setBioPreview(props.data.persons[ind].bio);\r\n  //}\r\n}\r\n","export default function Family(props) {\r\n  return <div>Display Family Node Here</div>;\r\n}\r\n","export default function Person(props) {\r\n  return <div>Display Person Node and Data Here</div>;\r\n}\r\n","export default function Ancestors(props) {\r\n  let linesToStyle = [];\r\n  let nodesToVisit = [];\r\n  //console.log(props.data.persons[props.index]);\r\n  nodesToVisit.push(props.data.persons[props.index]);\r\n  let currentNode = { id: 0, parents: 0, marriage: 0, isFamily: false };\r\n  currentNode = nodesToVisit.shift();\r\n  //console.log(currentNode);\r\n  //console.log(currentNode.id);\r\n  while (currentNode != null) {\r\n    if (currentNode.isFamily) {\r\n      let parentNum1 = currentNode.spouse1;\r\n      let parentNum2 = currentNode.spouse2;\r\n      if (parentNum1 !== 0 && parentNum2 !== 0) {\r\n        nodesToVisit.push(props.data.persons[parentNum1]);\r\n        nodesToVisit.push(props.data.persons[parentNum2]);\r\n        linesToStyle.push(props.data.lines[currentNode.spouse1Line]);\r\n        linesToStyle.push(props.data.lines[currentNode.spouse2Line]);\r\n      }\r\n    } else {\r\n      let parentNum = currentNode.parents;\r\n      if (parentNum !== 0) {\r\n        nodesToVisit.push(props.data.families[parentNum]);\r\n        linesToStyle.push(props.data.lines[currentNode.parentLine]);\r\n      }\r\n    }\r\n    currentNode = nodesToVisit.shift();\r\n  }\r\n  console.log(linesToStyle);\r\n\r\n  let familyNodeEls = props.data.families.map((node, ind) => {\r\n    return (\r\n      <circle\r\n        className=\"familyNode\"\r\n        r={25}\r\n        cx={node.nodeXCoord}\r\n        cy={node.nodeYCoord}\r\n        onClick={props.selectFamily}\r\n        nodeindex={ind}\r\n      />\r\n    );\r\n  });\r\n  let personNodeEls = props.data.persons.map((node, ind) => {\r\n    return (\r\n      <circle\r\n        className=\"personNode\"\r\n        r={25}\r\n        cx={node.nodeXCoord}\r\n        cy={node.nodeYCoord}\r\n        onClick={props.selectPerson}\r\n        //onMouseEnter={SetPreview(ind)}\r\n        nodeindex={ind}\r\n      />\r\n    );\r\n  });\r\n  let lineEls = props.data.lines.map((line, ind) => {\r\n    return (\r\n      <line\r\n        x1={line.x1Coord}\r\n        y1={line.y1Coord}\r\n        x2={line.x2Coord}\r\n        y2={line.y2Coord}\r\n        stroke=\"black\"\r\n        strokeWidth={5}\r\n      />\r\n    );\r\n  });\r\n  let highlightedLineEls = linesToStyle.map((line, ind) => {\r\n    return (\r\n      <line\r\n        x1={line.x1Coord}\r\n        y1={line.y1Coord}\r\n        x2={line.x2Coord}\r\n        y2={line.y2Coord}\r\n        stroke=\"gold\"\r\n        strokeWidth={10}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"viewport\">\r\n        <svg height=\"100%\" width=\"100%\">\r\n          {lineEls}\r\n          {highlightedLineEls}\r\n          {familyNodeEls}\r\n          {personNodeEls}\r\n        </svg>\r\n      </div>\r\n      <div className=\"sidePanel\">\r\n        <button onClick={props.resetStyles}>Reset Tree</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //function SetPreview(ind) {\r\n  //console.log(ind);\r\n  //setNamePreview(props.data.persons[ind].name);\r\n  //setBioPreview(props.data.persons[ind].bio);\r\n  //}\r\n}\r\n","export default function Descendants(props) {\r\n  let linesToStyle = [];\r\n  let nodesToVisit = [];\r\n  //console.log(props.data.persons[props.index]);\r\n  nodesToVisit.push(props.data.persons[props.index]);\r\n  let currentNode = { id: 0, parents: 0, marriage: 0, isFamily: false };\r\n  currentNode = nodesToVisit.shift();\r\n  //console.log(currentNode);\r\n  //console.log(currentNode.id);\r\n  while (currentNode != null) {\r\n    if (currentNode.isFamily) {\r\n      currentNode.children.forEach((element) => {\r\n        nodesToVisit.push(props.data.persons[element]);\r\n      });\r\n      currentNode.childrenLines.forEach((element) => {\r\n        linesToStyle.push(props.data.lines[element]);\r\n      });\r\n    } else {\r\n      let marriageNum = currentNode.marriage;\r\n      if (marriageNum !== 0) {\r\n        nodesToVisit.push(props.data.families[marriageNum]);\r\n        linesToStyle.push(props.data.lines[currentNode.marriageLine]);\r\n      }\r\n    }\r\n    currentNode = nodesToVisit.shift();\r\n  }\r\n  console.log(linesToStyle);\r\n\r\n  let familyNodeEls = props.data.families.map((node, ind) => {\r\n    return (\r\n      <circle\r\n        className=\"familyNode\"\r\n        r={25}\r\n        cx={node.nodeXCoord}\r\n        cy={node.nodeYCoord}\r\n        onClick={props.selectFamily}\r\n        nodeindex={ind}\r\n      />\r\n    );\r\n  });\r\n  let personNodeEls = props.data.persons.map((node, ind) => {\r\n    return (\r\n      <circle\r\n        className=\"personNode\"\r\n        r={25}\r\n        cx={node.nodeXCoord}\r\n        cy={node.nodeYCoord}\r\n        onClick={props.selectPerson}\r\n        //onMouseEnter={SetPreview(ind)}\r\n        nodeindex={ind}\r\n      />\r\n    );\r\n  });\r\n  let lineEls = props.data.lines.map((line, ind) => {\r\n    return (\r\n      <line\r\n        x1={line.x1Coord}\r\n        y1={line.y1Coord}\r\n        x2={line.x2Coord}\r\n        y2={line.y2Coord}\r\n        stroke=\"black\"\r\n        strokeWidth={5}\r\n      />\r\n    );\r\n  });\r\n  let highlightedLineEls = linesToStyle.map((line, ind) => {\r\n    return (\r\n      <line\r\n        x1={line.x1Coord}\r\n        y1={line.y1Coord}\r\n        x2={line.x2Coord}\r\n        y2={line.y2Coord}\r\n        stroke=\"purple\"\r\n        strokeWidth={10}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"viewport\">\r\n        <svg height=\"100%\" width=\"100%\">\r\n          {lineEls}\r\n          {highlightedLineEls}\r\n          {familyNodeEls}\r\n          {personNodeEls}\r\n        </svg>\r\n      </div>\r\n      <div className=\"sidePanel\">\r\n        <button onClick={props.resetStyles}>Reset Tree</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //function SetPreview(ind) {\r\n  //console.log(ind);\r\n  //setNamePreview(props.data.persons[ind].name);\r\n  //setBioPreview(props.data.persons[ind].bio);\r\n  //}\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Tree from \"./Components/Tree\";\nimport Family from \"./Components/Family\";\nimport Person from \"./Components/Person\";\nimport Ancestors from \"./Components/Ancestors\";\nimport Descendants from \"./Components/Descendants\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [treeData, setTreeData] = useState({\n    families: [],\n    persons: [],\n    lines: [],\n  });\n  const [familyIndex, setFamilyIndex] = useState(0);\n  const [personIndex, setPersonIndex] = useState(0);\n  const [currentDisplay, setCurrentDisplay] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"data.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setTreeData(data);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <p>Currently Loading Data</p>;\n  }\n\n  // Display Tree\n  if (currentDisplay === 0) {\n    return (\n      <div className=\"App\">\n        <Tree\n          data={treeData}\n          selectFamily={selectFamily}\n          selectPerson={selectPerson}\n        />\n      </div>\n    );\n  } // Display Family Node\n  else if (currentDisplay === 1) {\n    return (\n      <div className=\"App\">\n        <Family\n          data={treeData}\n          index={familyIndex}\n          selectPerson={selectPerson}\n        />\n      </div>\n    );\n  } // Display Person Node\n  else if (currentDisplay === 2) {\n    return (\n      <div className=\"App\">\n        <Person\n          data={treeData}\n          index={personIndex}\n          selectFamily={selectFamily}\n          displayAncestors={displayAncestors}\n          displayDescendants={displayDescendants}\n        />\n      </div>\n    );\n  } // Displays Tree and Highlights Ancestors of Current Person\n  else if (currentDisplay === 3) {\n    return (\n      <div className=\"App\">\n        <Ancestors\n          data={treeData}\n          index={personIndex}\n          selectFamily={selectFamily}\n          selectPerson={selectPerson}\n          resetStyles={returnToTree}\n        />\n      </div>\n    );\n  } // Displays Tree and Highlights Descendants of Current Person\n  else if (currentDisplay === 4) {\n    return (\n      <div className=\"App\">\n        <Descendants\n          data={treeData}\n          index={personIndex}\n          selectFamily={selectFamily}\n          selectPerson={selectPerson}\n          resetStyles={returnToTree}\n        />\n      </div>\n    );\n  }\n\n  function returnToTree() {\n    setFamilyIndex(0);\n    setPersonIndex(0);\n    setCurrentDisplay(0);\n  }\n\n  function selectFamily(nodeId) {\n    setFamilyIndex(nodeId);\n    setCurrentDisplay(1);\n  }\n\n  function selectPerson(nodeId) {\n    setPersonIndex(nodeId);\n    setCurrentDisplay(2);\n  }\n\n  function displayAncestors() {\n    setCurrentDisplay(3);\n  }\n\n  function displayDescendants() {\n    setCurrentDisplay(4);\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}